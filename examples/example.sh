# Пример логической спецификации.
# Язык поддерживает однострочные комментарии, начинающиеся с символа решёти.
# Язык чувствителен к регистру и не зависит от пробельных символов между лексемами (контестно свободен)
# Описание спецификации состоит из трёх секций: DECLARATIONS, FACTS и RESTRICTIONS (см. описание ниже).
# Секции могут быть пустыми, но их заголовки должны присутствовать

# Секция DECLARATIONS содержит объявления предикатов и функций, разделённых знаком ";".
# Они нужны для строгой типизации языка.
DECLARATIONS

    # Предикаты и функции описываются одинаковым способом:
	#	<имя> : (<список типов входных параметров>) -> <тип результата>;
	# Предикаты отличаются от фуекций тем, что они возвращают логический тип (Boolean)
	# Всего в языке 3 специальных зарезервированных типа:
	#	Boolean - логический тип;
	#	Integer - целочисленный тип; его константы задаются целочисленными литералами;
	#	Real	- вещественный тип; задаётся числовыми литералами;

    # это предикат, от целого числа
	Pred : (Integer) -> Boolean;

    # это предикат, от двух целых чисел
	Pred2 : (Integer, Integer) -> Boolean;

    # это функция, принимающая тип Signal, и возвращающая вещественное число
	Func : (Signal) -> Real;
	# поддерживаются зарезервированные математические функции:
	#	abs, max, min, sin, cos, tan, asin, acos, atan, log


# Секция FACTS содержит список фактов и аксиом, разделённых знаком ";".
# Факты и аксиомы распологаются в произвольном порядке.
FACTS

    # Так задаются факты, содержаще истинное значение предиката
	Pred(1);

    # Так задаются факты, содержаще ложное значение предиката
	!Pred2(5, 5);

    # Так задаётся значение функции
	# константы пользовательских типов задаются произвольными словами
	Func(Signal1) = 25.6;

    # пример аксиомы с одной переменной "x" типа Integer
	# посылка и следствие разделяются символами "=>"
	# конъюнкты разделяются символом "&"
	All x : Integer
	    Pred(x) & x <= 5 => Pred(x + 1) & Pred2(x, x + 1);

    # пример аксиомы с тремя переменными двух типов
	# All x, y : Integer, signal : Signal
	#     Pred2(x, y) & Func(signal) = x => Pred2(y, x);
	# Эта аксиома приведёт к ошибке компиляции, так как переменная "signal" не представлена
	# в основной предикатной части посылки


# Секция RESTRICTIONS содержит ограничения, разделённые знаком ";".
RESTRICTIONS

	Pred(6);
	Pred(7);

    All x : Integer	# квантор всеобщности
	    Ext y : Integer	# квантор существования
		    Pred2(x, y) & !Pred(y);























###############
#~ PREDICATES
	#~ A ( 2 )   B ( 2 )   C ( 2 )
#~ FUNCTIONS
#~ FACTS
#~ 
#~ A  a b
#~ A  g d
#~ 
#~ B  b d
#~ B  b e
#~ B  b k
#~ 
#~ C  c d
#~ C  e a
#~ 
#~ =>  & 3   A _x _y   B _y _z   C _v _p     B _z _p
#~ =>  & 2   A _x _y   C _z _v		  B _x _z
#~ RESTRICTIONS
#~ END

###############




#~ DECLARATIONS
	#~ P1:	(type) -> Boolean;
	#~ P2:	(type, type) -> Boolean;
	#~ P3:	(type, type, type) -> Boolean;
#~ 
	#~ F1:	(type) -> type;
	#~ F2:	(type, type) -> type;
	#~ F3:	(type, type, type) -> type;
#~ 
#~ FACTS
#~ 
	#~ All x1:type, x2:type All x3:type
		#~ P1(F1(x1)) & F2(x1, x2) = x3 & P3(x1, x2, x3) => P1(x3);
